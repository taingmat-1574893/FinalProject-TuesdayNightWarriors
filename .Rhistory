PhoneData <- read.csv("phone_dataset.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/INFO201/Assignments/FinalProject-TuesdayNightWarriors/Data")
PhoneData <- read.csv("phone_dataset.csv", stringsAsFactors = FALSE)
View(PhoneData)
PhoneData <- read.csv("phone_dataset.csv", quote = "", stringsAsFactors = FALSE)
View(PhoneData)
View(PhoneData)
View(PhoneData)
install.packages("stringi")
library(stringi)
DATA <- read.csv("/Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
getwd()
setwd("~/Desktop/INFO201/Assignments/FinalProject-TuesdayNightWarriors")
DATA <- read.csv("/Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
DATA <- read.csv("Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
View(DATA)
DATA <- read.csv("Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
ModifiedData <- DATA[, -which(names(DATA) %in% c("status", "weight_oz"))]
PrimaryJustMP <- stri_extract_first_regex(ModifiedData$primary_camera, "[0.0-9.0]+")
SecondaryJustMP <- stri_extract_first_regex(ModifiedData$secondary_camera, "[0.0-9.0]+")
CpuGHz <- stri_extract_first_regex(ModifiedData$CPU, "[0.0-9.0]+")
MemoryCard <- stri_extract_first_regex(ModifiedData$memory_card, "[0.0-9.0]+")
BatteryMPH <- stri_extract_first_regex(ModifiedData$battery, "[0.0-9.0]+")
MoreModifiedData <- ModifiedData %>%  mutate("Primary Camera MP"= PrimaryJustMP) %>% mutate ("Secondry Camera MP" = SecondaryJustMP) %>% mutate("CPU GHz"=CpuGHz) %>% mutate("Memory Card GB"=MemoryCard) %>% mutate("Battery MPH"=BatteryMPH)
library(dplyr)
ModifiedData <- DATA[, -which(names(DATA) %in% c("status", "weight_oz"))]
View(ModifiedData)
MoreModifiedData <- ModifiedData %>%  mutate("Primary Camera MP"= PrimaryJustMP) %>% mutate ("Secondry Camera MP" = SecondaryJustMP) %>% mutate("CPU GHz"=CpuGHz) %>% mutate("Memory Card GB"=MemoryCard) %>% mutate("Battery MPH"=BatteryMPH)
View(MoreModifiedData)
?ggplot
?geom_boxplot
??geom_boxplot
??geom_bar
conditionGB <- ModifiedData$RAM %in% c("GB")
ModifiedData$RAM[conditionGB] <- as.numeric(stri_extract_first_regex(ModifiedData$RAM, "[0-9]+")
ModifiedData$RAM[conditionGB] <- as.numeric(stri_extract_first_regex(ModifiedData$RAM, "[0-9]+")
DATA <- read.csv("Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
View(DATA)
<- DATA[, -which(names(DATA) %in% c("status", "weight_oz"))] %>%
mutate(CPU = gsub('4x', "", CPU), CPU = gsub('2x', "", CPU), CPU = gsub('3x', "", CPU))
library(dplyr)
library(stringi)
#Format data
#DATA <- read.csv("/Users/mikiaslema/Documents/INFO201/Projects/FinalProject/FinalProject-TuesdayNightWarriors/Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
GreaterThan50NA <- function(number) {
if(number > 50) {
return(NA)
}
else {
return(number)
}
}
ModifiedData <- DATA[, -which(names(DATA) %in% c("status", "weight_oz"))] %>%
mutate(CPU = gsub('4x', "", CPU), CPU = gsub('2x', "", CPU), CPU = gsub('3x', "", CPU))
View(ModifiedData)
shiny::runApp()
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(shinydashboard)
library(shinyjs)
install.packages("shinydashboard")
install.packages("shinyjs")
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(shinydashboard)
library(shinyjs)
runApp()
install.packages("plotly")
library(plotly)
runApp()
runApp()
runApp()
getwd()
phone_data <- read.csv("Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
View(phone_data)
plot <- ggplot(phone_data, aes(x=phone_data$cloudMobile.S500, y=phone_data$RAM)) + geom_histogram()
plot
plot <- ggplot(phone_data, aes(x=phone_data$cloudMobile.S500, y=phone_data$RAM)) + geom_histogram()
plot <- ggplot(phone_data, aes(x=phone_data$cloudMobile.S500, y=phone_data$weight_g)) + geom_histogram()
plot
plot <- ggplot(phone_data, aes(x=cloudMobile.S500, y=weight_g)) + geom_histogram()
plot
plot <- ggplot(data=phone_data, aes(phone_data$weight_g)) + geom_histogram()
plot
plot <- ggplot(phone_data, aes(x=phone_data$weight_g)) +
geom_bar(aes(fill = ..count..)) +
scale_y_continuous(breaks=pretty_breaks(n=5))+
geom_text(stat='count',aes(label=..count..),vjust=-1) +
labs(x = "Model",y = "Stats",title = "Phone Stats")
library(scales)
install.packages("scales")
install.packages("scales")
library(scales)
plot <- ggplot(phone_data, aes(x=phone_data$weight_g)) +
geom_bar(aes(fill = ..count..)) +
scale_y_continuous(breaks=pretty_breaks(n=5))+
geom_text(stat='count',aes(label=..count..),vjust=-1) +
labs(x = "Model",y = "Stats",title = "Phone Stats")
plot
phone_data <- read.csv("Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
View(phone_data)
source("FormatData.R")
View(phone_data)
library(dplyr)
library(stringi)
library(dplyr)
source('~/Desktop/INFO201/Assignments/FinalProject-TuesdayNightWarriors/FormatData.R', echo=TRUE)
(dplyr)
library(stringi)
#Format data
#DATA <- read.csv("/Users/mikiaslema/Documents/INFO201/Projects/FinalProject/FinalProject-TuesdayNightWarriors/Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
GreaterThan50NA <- function(number) {
if(number > 50) {
return(NA)
}
else {
return(number)
}
}
DATA <- read.csv("Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
#use baseline r regx
ModifiedData <- DATA[, -which(names(DATA) %in% c("status", "weight_oz"))] %>%
mutate(CPU = gsub('4x', "", CPU), CPU = gsub('2x', "", CPU), CPU = gsub('3x', "", CPU))
PrimaryJustMP <- as.numeric(stri_extract_first_regex(ModifiedData$primary_camera, "[0.0-9.0]+"))
SecondaryJustMP <- as.numeric(stri_extract_first_regex(ModifiedData$secondary_camera, "[0.0-9.0]+"))
CpuGHz <- as.numeric(stri_extract_first_regex(ModifiedData$CPU, "[0.0-9.0]+"))
MemoryCard <- as.numeric(stri_extract_first_regex(ModifiedData$memory_card, "[0.0-9.0]+"))
BatteryMPH <- as.numeric(stri_extract_first_regex(ModifiedData$battery, "[0.0-9.0]+"))
internalMem <- as.numeric(stri_extract_last_regex(ModifiedData$internal_memory, "[0.0-9.0]+"))
#Ram <- as.numeric(stri_extract_first_regex(ModifiedData$RAM, "[0.0-9.0]+"))
#Applying
phone_data <- ModifiedData  %>%
mutate("CPU_GHz"=CpuGHz) %>%
mutate("Memory_Card_GB"=MemoryCard) %>%
mutate("Battery_MPH"=BatteryMPH) %>%
mutate("Primary_Camera_MP" = ifelse(PrimaryJustMP > 50, NA, PrimaryJustMP)) %>%
mutate("Secondary_Camera_MP" = ifelse(SecondaryJustMP > 20, NA, SecondaryJustMP)) %>%
mutate("Internal-Memory" = internalMem) %>%
mutate("Ram_GB" = Ram)
phone_data[phone_data==""]<-NA
phone_data[phone_data=="N/A"]<-NA
Ram <- as.numeric(stri_extract_first_regex(ModifiedData$RAM, "[0.0-9.0]+"))
View(phone_data)
phone_data <- ModifiedData  %>%
mutate("CPU_GHz"=CpuGHz) %>%
mutate("Memory_Card_GB"=MemoryCard) %>%
mutate("Battery_MPH"=BatteryMPH) %>%
mutate("Primary_Camera_MP" = ifelse(PrimaryJustMP > 50, NA, PrimaryJustMP)) %>%
mutate("Secondary_Camera_MP" = ifelse(SecondaryJustMP > 20, NA, SecondaryJustMP)) %>%
mutate("Internal-Memory" = internalMem) %>%
mutate("Ram_GB" = Ram)
phone_data[phone_data==""]<-NA
phone_data[phone_data=="N/A"]<-NA
View(phone_data)
plot <- ggplot(phone_data, aes(x=phone_data$Ram_GB)) +
geom_bar(aes(fill = ..count..)) +
scale_y_continuous(breaks=pretty_breaks(n=5))+
geom_text(stat='count',aes(label=..count..),vjust=-1) +
labs(x = "Model",y = "Stats",title = "Phone Stats")
plot
plot <- ggplot(phone_data, aes(x=phone_data$cloudMobile.S500, y=phone_data$Ram_GB)) +
geom_bar(aes(fill = ..count..)) +
scale_y_continuous(breaks=pretty_breaks(n=5))+
geom_text(stat='count',aes(label=..count..),vjust=-1) +
labs(x = "Model",y = "Stats",title = "Phone Stats")
plot
plot <- ggplot(phone_data, aes(x=phone_data$cloudMobile.S500, y=phone_data$Ram_GB)) +
geom_bar(aes(fill = ..count..)) +
scale_y_continuous(breaks=pretty_breaks(n=5)) +
labs(x = "Model",y = "Stats",title = "Phone Stats")
plot
plot <- ggplot(phone_data, aes(x=phone_data$cloudMobile.S500, y=phone_data$Ram_GB)) +
scale_y_continuous(breaks=pretty_breaks(n=5)) +
labs(x = "Model",y = "Stats",title = "Phone Stats")
plot
print(plot)
plot
ggplot(phone_data, aes(x=phone_data$cloudMobile.S500, y=phone_data$Ram_GB)) +
scale_y_continuous(breaks=pretty_breaks(n=5)) +
labs(x = "Model",y = "Stats",title = "Phone Stats")
ggplot(phone_data, aes(x=phone_data$cloudMobile.S500, y=phone_data$Ram_GB)) +
scale_y_continuous(breaks=pretty_breaks(n=5)) +
labs(x = "Model",y = "Stats",title = "Phone Stats")
ggplot(phone_data, aes(x=phone_data$cloudMobile.S500, y=phone_data$Ram_GB)) +
scale_y_continuous(breaks=pretty_breaks(n=5)) +
labs(x = "Model",y = "Stats",title = "Phone Stats")
getwd()
phone_data <- read.csv("Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
View(phone_data)
ListofSpecs = list(
"RAM" = 'Ram_GB',
"Battery" = 'Battery_MPH',
"CPU" = 'CPU_GHz',
"Internal Memory" = 'Internal Memory',
"Primary Camera" = 'Primary_Camera_MP',
"Secondary Camera" = 'Secondary_Camera_MP',
"Memory Card" = "Memory_Card_GB"
selectInput(
"SpecsInput",
label = h3("Specs"),
ListofSpecs = list(
"RAM" = 'Ram_GB',
"Battery" = 'Battery_MPH',
"CPU" = 'CPU_GHz',
"Internal Memory" = 'Internal Memory',
"Primary Camera" = 'Primary_Camera_MP',
"Secondary Camera" = 'Secondary_Camera_MP',
"Memory Card" = "Memory_Card_GB"
)
)
)
selectInput(
"SpecsInput",
label = h3("Specs"),
ListofSpecs = list(
"RAM" = 'Ram_GB',
"Battery" = 'Battery_MPH',
"CPU" = 'CPU_GHz',
"Internal Memory" = 'Internal Memory',
"Primary Camera" = 'Primary_Camera_MP',
"Secondary Camera" = 'Secondary_Camera_MP',
"Memory Card" = "Memory_Card_GB"
)
)
ListofSpecs = list(
"RAM" = 'Ram_GB',
"Battery" = 'Battery_MPH',
"CPU" = 'CPU_GHz',
"Internal Memory" = 'Internal Memory',
"Primary Camera" = 'Primary_Camera_MP',
"Secondary Camera" = 'Secondary_Camera_MP',
"Memory Card" = "Memory_Card_GB"
)
ListofSpecs
FormatData.R
source("FormatData.R")
length(ListofSpecs)
ListofSpecs[1]
PhoneModelList = list(
"iPhone 7 Plus",
"iPhone 7",
"iPad Pro 9.7",
"iPhone SE"
)
if(length(ListofSpecs) = 1){
ggplot(phone_data %>% select(ListofSpecs[1]) +
geom_col(aes_string("model", PhoneModelList[1], fill = "model"))
}
else if(length((ListofSpecs) = 2)){
ggplot(phone_data %>% select(ListofSpecs[2]) +
geom_col(aes_string("model", PhoneModelList[2], fill = "model")))
}
else (length((ListofSpecs) = 3)){
ggplot(phone_data %>% select(ListofSpecs[3]) +
geom_col(aes_string("model", PhoneModelList[3], fill = "model")))
x <- ggplot(phone_data %>% select(ListofSpecs[1]) +
geom_col(aes_string("model", PhoneModelList[1], fill = "model"))
PhoneModelList = list(
"iPhone 7 Plus",
"iPhone 7",
"iPad Pro 9.7",
"iPhone SE"
)
ListofSpecs = list(
"RAM" = 'Ram_GB',
"Battery" = 'Battery_MPH',
"CPU" = 'CPU_GHz',
"Internal Memory" = 'Internal Memory',
"Primary Camera" = 'Primary_Camera_MP',
"Secondary Camera" = 'Secondary_Camera_MP',
"Memory Card" = "Memory_Card_GB"
)
x <- ggplot(phone_data %>% select(ListofSpecs[1]) +
geom_col(aes_string("model", PhoneModelList[1], fill = "model"))
x <- ggplot(phone_data %>% select(ListofSpecs[1])
x <- ggplot(phone_data %>% select(ListofSpecs[1])
x <- ggplot(phone_data %>% select(ListofSpecs[1]) +
geom_col(aes_string("model", PhoneModelList[1], fill = "model"))
ListofSpecs
ListofSpecs[1]
phoneDF <- phone_data %>% filter(model %in% PhoneModelList)
View(phoneDF)
x <- ggplot(phoneDF) +
geom_col(aes_string("model", List[1], fill = "model"))
x <- ggplot(phoneDF) +
geom_col(aes_string("model", ListofSpecs[1], fill = "model"))
x
x <- ggplot(phoneDF) +
geom_col(aes_string("model", "Ram_GB", fill = "model"))
x
x <- ggplot(phoneDF) +
geom_col(aes_string("model", as.character(ListofSpecs[1]), fill = "model"))
x
y <- ggplot(phoneDF) +
geom_col(aes_string("model", as.character(ListofSpecs[2]), fill = "model"))
z <- ggplot(phoneDF) +
geom_col(aes_string("model", as.character(ListofSpecs[3]), fill = "model"))
y
z
y
y
y
z
y
y
x
phoneDF <- phone_data %>% filter(model %in% PhoneModelList)
if(length(ListofSpecs) >= 1){
x <- ggplot(phoneDF) +
geom_col(aes_string("model", as.character(ListofSpecs[1]), fill = "model"))
}
if(length((ListofSpecs) >= 2)){
y <- ggplot(phoneDF) +
geom_col(aes_string("model", as.character(ListofSpecs[2]), fill = "model"))
}
if (length((ListofSpecs) >= 3)){
z <- ggplot(phoneDF) +
geom_col(aes_string("model", as.character(ListofSpecs[3]), fill = "model"))
PhoneModelList = list(
"iPhone 7 Plus",
"iPhone 7",
"iPhone SE"
)
phoneDF <- phone_data %>% filter(model %in% PhoneModelList)
if(length(ListofSpecs) >= 1){
x <- ggplot(phoneDF) +
geom_col(aes_string("model", as.character(ListofSpecs[1]), fill = "model"))
}
if(length((ListofSpecs) >= 2)){
y <- ggplot(phoneDF) +
geom_col(aes_string("model", as.character(ListofSpecs[2]), fill = "model"))
}
if (length((ListofSpecs) >= 3)){
z <- ggplot(phoneDF) +
geom_col(aes_string("model", as.character(ListofSpecs[3]), fill = "model"))
}
x
#Format data
phone_data <- read.csv("Data/phone_dataset.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE) %>%
mutate(CPU = gsub('4x', "", CPU), CPU = gsub('2x', "", CPU), CPU = gsub('3x', "", CPU))
#Function which takes in a column of phone specs
#Returns the column only containing the first number of each string
firstNum <- function(column) {
return(as.numeric(stri_extract_first_regex(column, "[0.0-9.0]+")))
}
#Reformatting the data to make it quantifiable
phone_data <- phone_data %>%
mutate("CPU_GHz"= firstNum(phone_data$CPU)) %>%
mutate("Memory_Card_GB"= firstNum(phone_data$memory_card)) %>%
mutate("Battery_MPH"= firstNum(phone_data$battery)) %>%
mutate("Primary_Camera_MP" = ifelse(firstNum(phone_data$primary_camera) > 50, NA, firstNum(phone_data$primary_camera))) %>%
mutate("Secondary_Camera_MP" = ifelse(firstNum(phone_data$secondary_camera) > 20, NA, firstNum(phone_data$secondary_camera))) %>%
mutate("Internal-Memory" = firstNum(phone_data$internal_memory)) %>%
mutate("Ram_GB" = firstNum(phone_data$RAM)) %>%
mutate("approx_price_USD" = approx_price_EUR*1.19) %>%
mutate("Display_size" = firstNum(phone_data$display_size))
mutate("Announced" = firstNum(phone_data$announced))
#All blanks and N/A values become NA
phone_data[phone_data==""]<-NA
phone_data[phone_data=="N/A"]<-NA
View(phone_data)
phone_data <- phone_data %>%
mutate("CPU_GHz"= firstNum(phone_data$CPU)) %>%
mutate("Memory_Card_GB"= firstNum(phone_data$memory_card)) %>%
mutate("Battery_MPH"= firstNum(phone_data$battery)) %>%
mutate("Primary_Camera_MP" = ifelse(firstNum(phone_data$primary_camera) > 50, NA, firstNum(phone_data$primary_camera))) %>%
mutate("Secondary_Camera_MP" = ifelse(firstNum(phone_data$secondary_camera) > 20, NA, firstNum(phone_data$secondary_camera))) %>%
mutate("Internal-Memory" = firstNum(phone_data$internal_memory)) %>%
mutate("Ram_GB" = firstNum(phone_data$RAM)) %>%
mutate("approx_price_USD" = approx_price_EUR*1.19) %>%
mutate("Display_size" = firstNum(phone_data$display_size)) %>%
mutate("Announced" = firstNum(phone_data$announced))
View(phone_data)
TableOG <- read.csv("Data/phone_dataset - original.csv")
